# -*- coding: utf-8 -*-
"""AGA LAB 1 6TH SEM

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19fFsdZtCeqL5KotDY1XGG1b4swPDLVpU
"""

from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Dense
import numpy as np
from sklearn.datasets import fetch_lfw_people

# Load LFW dataset
lfw_dataset = fetch_lfw_people(min_faces_per_person=40, resize=0.4)
face_images = lfw_dataset.images

# Normalize pixel values to [0, 1] and flatten images
face_images = face_images.astype('float32') / 255.0
flattened_images = face_images.reshape((face_images.shape[0], -1))

# data shapes
print("Processed Data Shape:", flattened_images.shape)

# Define model parameters
input_dimension = flattened_images.shape[1]  # Image size based on LFW resolution

# Function to create an autoencoder
def create_autoencoder(input_size, encoding_size):
    input_layer = Input(shape=(input_size,))
    encoded_layer = Dense(encoding_size, activation='relu')(input_layer)
    decoded_layer = Dense(input_size, activation='sigmoid')(encoded_layer)
    autoencoder = Model(input_layer, decoded_layer)
    autoencoder.compile(optimizer='adam', loss='mse')
    return autoencoder

# Create autoencoders with different encoding sizes
simple_autoencoder = create_autoencoder(input_dimension, 256)
minimal_autoencoder = create_autoencoder(input_dimension, 128)
expanded_autoencoder = create_autoencoder(input_dimension, 512)

# model summaries
print("\nSimple Autoencoder Structure:")
simple_autoencoder.summary()

print("\nMinimal Autoencoder Structure:")
minimal_autoencoder.summary()

print("\nExpanded Autoencoder Structure:")
expanded_autoencoder.summary()